name: Build

on:
  push:
    branches: [ master ]
    tags: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  build:
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write
    env:
      SRC_DIR: /root/
      REGISTRY: ghcr.io
      CONTAINER_IMAGE: golang:1.17.6

    steps:
    - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579
    - name: Lint
      run: |
        docker run --entrypoint=bash \
          -e GOCACHE=/tmp/.go-build \
          -v ${PWD}:${SRC_DIR}:Z \
          -w ${SRC_DIR} \
          ${CONTAINER_IMAGE} \
          -c 'test -z $(gofmt -l .)'
    - name: Test
      run: |
        docker run --entrypoint=go \
          -e GOCACHE=/tmp/.go-build \
          -v ${PWD}:${SRC_DIR}:Z \
          -w ${SRC_DIR} \
          ${CONTAINER_IMAGE} \
          test
    - name: Log in to the Container registry
      uses: docker/login-action@42d299face0c5c43a0487c477f595ac9cf22f1a7
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@e5622373a38e60fb6d795a4421e56882f2d7a681
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository }}
    - name: Build and push container image
      if: ${{ github.actor != 'dependabot[bot]' && github.repository_owner == 'oradwell' }}
      uses: docker/build-push-action@7f9d37fa544684fb73bfe4835ed7214c255ce02b
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
